extends base

mixin navItem(link, text, icon, active)
    li(class=`${active ? 'side-nav--active' : ''}`)
        a(href=`${link}`)
            svg
                use(xlink:href=`img/icons.svg#icon-${icon}`)
            | #{text}
block content
    main.main
        .user-view
            nav.user-view__menu
                ul.side-nav
                    +navItem('/me', 'Settings', 'settings')
                    +navItem('/my-classes', 'My classes', 'briefcase')
                    +navItem('/billing', 'Billing', 'credit-card')

                - if (user.role === 'admin')
                    .admin-nav
                        h5.admin-nav__heading Admin
                        ul.side-nav
                            +navItem('/add-a-class', 'Add a class', 'star', true)
                            +navItem('/manage-classes', 'Manage classes', 'map')                            
                            +navItem('/manage-users', 'Manage users', 'user')
            .newClass-form
                h2.heading-secondary.ma-bt-lg Create a new class
                form.form.form--newClass
                    .form__group
                        label.form__label(for='name') Class name
                        select#name.form__input(name='name', required)
                            option beginner
                            option intermediate
                            option advanced
                            option preschool
                            option floor and vault        
                    .form__group
                        label.form__label(for='venue') Venue
                        select#venue.form__input(name='venue', required)
                            option Anima Gymnastics Club
                    .form__group
                        label.form__label(for='term') Term
                        select#term.form__input(name='term', required)
                            option Autumn
                            option Winter
                            option Spring
                            option Summer
                    .form__group
                        label.form__label(for='day') Day of the week
                        select#day.form__input(name='day', required)
                            option Monday
                            option Tuesday
                            option Wednesday
                            option Thursday
                            option Friday
                            option Saturday
                            option Sunday
                    .form__group
                        label.form__label(for='time') Start time
                        input#time.form__input(type='time', required)
                        label.form__label(for='time1') End time
                        input#time1.form__input(type='time', required)
                    .form__group
                        label.form__label(for='duration') Duration (in minutes)
                        input#duration.form__input(type='number', placeholder='60', required)
                    .form__group
                        label.form__label(for='startDate') Start date
                        input#startDate.form__input(type='date', placeholder='John Smith', required)
                    .form__group
                        label.form__label(for='endDate') End date
                        input#endDate.form__input(type='date', placeholder='John Smith', required)
                    .form__group
                        label.form__label(for='age') Age range (between 3 and 16)
                        input#age.form__input(type='number', name='age', placeholder='5' required)
                        input#age1.form__input(type='number', name='age', placeholder='11' required)
                    .form__group
                        label.form__label(for='maxCapacity') Max capacity
                        input#maxCapacity.form__input(type='number', placeholder='24', required)
                    .form__group
                        label.form__label(for='description') Description
                        input#description.form__input(type='text', placeholder='description', required)
                    .form__group
                        label.form__label(for='fullPrice') Full price
                        input#fullPrice.form__input(type='number', placeholder='70', required)
                    .form__group.ma-bt-md
                        label.form__label(for='classPrice') Each class price
                        input#classPrice.form__input(type='number', placeholder='10', required)
                    .form__group
                        button.btn.btn--blue Create class